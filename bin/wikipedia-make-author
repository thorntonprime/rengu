#!/usr/bin/python3

import sys
import unicodedata
import uuid
import yaml

sys.path.append('')

from rengu.author import Author
from rengu.tools import YamlDumper, lookup_wikipedia


def normalize(input_str):
    # Returns a NFKD normalized form of the input string
    nfkd_form = unicodedata.normalize('NFKD', input_str)
    return u"".join([c for c in nfkd_form if not unicodedata.combining(c)])

if __name__ == '__main__':

    for name in [x.strip() for x in sys.stdin.readlines()]:
        sys.stdout.write("     %-70s\r" % (name.strip()))
        #sys.stdout.write("     %s\n" % (name.strip()))
        sys.stdout.flush()

        page = lookup_wikipedia(name)

        label = page.data.get("label")
        url = page.data.get("url", "")
        what = page.data.get("what", "NONE")

        wikibase = page.data.get("wikibase")
        pageid = page.data.get("pageid")

        if type(what) is tuple:
            what = ','.join(what)
        if what == 'Wikimedia disambiguation page':
            what = "_disambiguate_"

        if what == 'human':

            exists = list(Author.find(name))
            if exists:
                print("Weird ... I already have", name, "=", label)
                continue

            data = list(Author.find(label))
            if data:
                data = dict(data[0])

                uid = data['pk']
                del data['pk']

                if data.get('AlternateNames'):
                    data['AlternateNames'].append(name)
                else:
                    data['AlternateNames'] = [name]

            else:
                uid = str(uuid.uuid4())

                data = {
                    "Name": label,
                    "Wikipedia": {
                        "URL": url,
                        "PageID": pageid,
                        "Base": wikibase
                    }
                }

                if name != label:
                    data['AlternateNames'] = [name]

            # from pprint import pprint
            # pprint(data)

            try:
                os.mkdir("tmp/authors/")
            except:
                pass

            f = open('tmp/authors/' + uid, 'w')

            f.write("---\n")
            f.write(
                yaml.dump(
                    data,
                    Dumper=YamlDumper,
                    default_flow_style=False, allow_unicode=True,
                    width=70,
                    indent=2).strip())
            f.write("\n---\n")
            f.close()

    print()
