#!/usr/bin/python3

import sys
import unicodedata
import uuid
import yaml

sys.path.append('')

from rengu.source import Source
from rengu.tools import YamlDumper, lookup_wikipedia


def normalize(input_str):
    # Returns a NFKD normalized form of the input string
    nfkd_form = unicodedata.normalize('NFKD', input_str)
    return u"".join([c for c in nfkd_form if not unicodedata.combining(c)])

if __name__ == '__main__':

    for title in [x.strip() for x in sys.stdin.readlines()]:
        sys.stdout.write("     %-70s\r" % (title.strip()))
        sys.stdout.flush()

        page = lookup_wikipedia(title)

        label = page.data.get("label")
        url = page.data.get("url", "")
        what = page.data.get("what", "NONE")

        wikibase = page.data.get("wikibase")
        pageid = page.data.get("pageid")

        if type(what) is tuple:
            what = ','.join(what)
        if what == 'Wikimedia disambiguation page':
            what = "_disambiguate_"

        exists = list(Source.find(title))
        if exists:
            print("Weird ... I already have", title, "=", label)
            continue

        data = list(Source.find(label))
        if data:
            data = dict(data[0])

            uid = data['pk']
            del data['pk']

            if data.get('AlternateTitles'):
                data['AlternateTitles'].append(title)
            else:
                data['AlternateTitles'] = [title]

        else:
            uid = str(uuid.uuid4())

            data = {
                "Title": label,
                "Wikipedia": {
                    "URL": url,
                    "PageID": pageid,
                    "Base": wikibase
                }
            }

            if title != label:
                data['AlternateTitles'] = [title]

        # from pprint import pprint
        # pprint(data)

        try:
            os.mkdir("tmp/sources/")
        except:
            pass

        f = open('tmp/sources/' + uid, 'w')

        f.write("---\n")
        f.write(
            yaml.dump(
                data,
                Dumper=YamlDumper,
                default_flow_style=False, allow_unicode=True,
                width=70,
                indent=2).strip())
        f.write("\n---\n")
        f.close()

    print()
